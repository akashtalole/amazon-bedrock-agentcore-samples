{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2025-05-01",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"agentcredentialprovider",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"Amazon Bedrock AgentCore Credential Provider Service",
    "serviceId":"AgentCredentialProvider",
    "signatureVersion":"v4",
    "signingName":"bedrock-agentcore",
    "uid":"agentcredentialprovider-2025-05-01"
  },
  "operations":{
    "Authorize":{
      "name":"Authorize",
      "http":{
        "method":"GET",
        "requestUri":"/identities/oauth2/authorize",
        "responseCode":200
      },
      "input":{"shape":"AuthorizeRequest"},
      "output":{"shape":"AuthorizeResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "internalonly":true
    },
    "Callback":{
      "name":"Callback",
      "http":{
        "method":"GET",
        "requestUri":"/identities/oauth2/callback",
        "responseCode":200
      },
      "input":{"shape":"CallbackRequest"},
      "output":{"shape":"CallbackResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "internalonly":true
    },
    "CreateAgentIdentity":{
      "name":"CreateAgentIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/CreateAgentIdentity",
        "responseCode":200
      },
      "input":{"shape":"CreateAgentIdentityRequest"},
      "output":{"shape":"CreateAgentIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ResourceLimitExceededException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "CreateApiKeyCredentialProvider":{
      "name":"CreateApiKeyCredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/CreateApiKeyCredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"CreateApiKeyCredentialProviderRequest"},
      "output":{"shape":"CreateApiKeyCredentialProviderResponse"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"UnauthorizedException"},
        {"shape":"ResourceLimitExceededException"},
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"EncryptionFailure"}
      ],
      "idempotent":true
    },
    "CreateOauth2Authorizer":{
      "name":"CreateOauth2Authorizer",
      "http":{
        "method":"POST",
        "requestUri":"/identities/CreateOauth2Authorizer",
        "responseCode":200
      },
      "input":{"shape":"CreateOauth2AuthorizerRequest"},
      "output":{"shape":"CreateOauth2AuthorizerResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ResourceLimitExceededException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "internalonly":true
    },
    "CreateOauth2CredentialProvider":{
      "name":"CreateOauth2CredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/CreateOauth2CredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"CreateOauth2CredentialProviderRequest"},
      "output":{"shape":"CreateOauth2CredentialProviderResponse"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"UnauthorizedException"},
        {"shape":"ResourceLimitExceededException"},
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"EncryptionFailure"}
      ],
      "idempotent":true
    },
    "CreateWorkloadIdentity":{
      "name":"CreateWorkloadIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/CreateWorkloadIdentity",
        "responseCode":200
      },
      "input":{"shape":"CreateWorkloadIdentityRequest"},
      "output":{"shape":"CreateWorkloadIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true
    },
    "DeleteAgentIdentity":{
      "name":"DeleteAgentIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/DeleteAgentIdentity",
        "responseCode":200
      },
      "input":{"shape":"DeleteAgentIdentityRequest"},
      "output":{"shape":"DeleteAgentIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "DeleteApiKeyCredentialProvider":{
      "name":"DeleteApiKeyCredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/DeleteApiKeyCredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"DeleteApiKeyCredentialProviderRequest"},
      "output":{"shape":"DeleteApiKeyCredentialProviderResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true
    },
    "DeleteOauth2Authorizer":{
      "name":"DeleteOauth2Authorizer",
      "http":{
        "method":"POST",
        "requestUri":"/identities/DeleteOauth2Authorizer",
        "responseCode":200
      },
      "input":{"shape":"DeleteOauth2AuthorizerRequest"},
      "output":{"shape":"DeleteOauth2AuthorizerResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true,
      "internalonly":true
    },
    "DeleteOauth2CredentialProvider":{
      "name":"DeleteOauth2CredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/DeleteOauth2CredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"DeleteOauth2CredentialProviderRequest"},
      "output":{"shape":"DeleteOauth2CredentialProviderResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true
    },
    "DeleteWorkloadIdentity":{
      "name":"DeleteWorkloadIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/DeleteWorkloadIdentity",
        "responseCode":200
      },
      "input":{"shape":"DeleteWorkloadIdentityRequest"},
      "output":{"shape":"DeleteWorkloadIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true
    },
    "GetAgentAccessToken":{
      "name":"GetAgentAccessToken",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetAgentAccessToken",
        "responseCode":200
      },
      "input":{"shape":"GetAgentAccessTokenRequest"},
      "output":{"shape":"GetAgentAccessTokenResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "GetAgentIdentity":{
      "name":"GetAgentIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetAgentIdentity",
        "responseCode":200
      },
      "input":{"shape":"GetAgentIdentityRequest"},
      "output":{"shape":"GetAgentIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "GetApiKeyCredentialProvider":{
      "name":"GetApiKeyCredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetApiKeyCredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"GetApiKeyCredentialProviderRequest"},
      "output":{"shape":"GetApiKeyCredentialProviderResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetOauth2Authorizer":{
      "name":"GetOauth2Authorizer",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetOauth2Authorizer",
        "responseCode":200
      },
      "input":{"shape":"GetOauth2AuthorizerRequest"},
      "output":{"shape":"GetOauth2AuthorizerResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "internalonly":true
    },
    "GetOauth2CredentialProvider":{
      "name":"GetOauth2CredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetOauth2CredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"GetOauth2CredentialProviderRequest"},
      "output":{"shape":"GetOauth2CredentialProviderResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetPublicKey":{
      "name":"GetPublicKey",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetPublicKey",
        "responseCode":200
      },
      "input":{"shape":"GetPublicKeyRequest"},
      "output":{"shape":"GetPublicKeyResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "internalonly":true
    },
    "GetResourceApiKey":{
      "name":"GetResourceApiKey",
      "http":{
        "method":"POST",
        "requestUri":"/identities/api-key",
        "responseCode":200
      },
      "input":{"shape":"GetResourceApiKeyRequest"},
      "output":{"shape":"GetResourceApiKeyResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetResourceOauth2Token":{
      "name":"GetResourceOauth2Token",
      "http":{
        "method":"POST",
        "requestUri":"/identities/oauth2/token",
        "responseCode":200
      },
      "input":{"shape":"GetResourceOauth2TokenRequest"},
      "output":{"shape":"GetResourceOauth2TokenResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetResourceOauth2TokenWithUserId":{
      "name":"GetResourceOauth2TokenWithUserId",
      "http":{
        "method":"POST",
        "requestUri":"/identities/oauth2/token_with_user_id",
        "responseCode":200
      },
      "input":{"shape":"GetResourceOauth2TokenWithUserIdRequest"},
      "output":{"shape":"GetResourceOauth2TokenWithUserIdResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "GetTokenVault":{
      "name":"GetTokenVault",
      "http":{
        "method":"POST",
        "requestUri":"/identities/get-token-vault",
        "responseCode":200
      },
      "input":{"shape":"GetTokenVaultRequest"},
      "output":{"shape":"GetTokenVaultResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetWorkloadAccessToken":{
      "name":"GetWorkloadAccessToken",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetWorkloadAccessToken",
        "responseCode":200
      },
      "input":{"shape":"GetWorkloadAccessTokenRequest"},
      "output":{"shape":"GetWorkloadAccessTokenResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetWorkloadAccessTokenForJWT":{
      "name":"GetWorkloadAccessTokenForJWT",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetWorkloadAccessTokenForJWT",
        "responseCode":200
      },
      "input":{"shape":"GetWorkloadAccessTokenForJWTRequest"},
      "output":{"shape":"GetWorkloadAccessTokenForJWTResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetWorkloadAccessTokenForUserId":{
      "name":"GetWorkloadAccessTokenForUserId",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetWorkloadAccessTokenForUserId",
        "responseCode":200
      },
      "input":{"shape":"GetWorkloadAccessTokenForUserIdRequest"},
      "output":{"shape":"GetWorkloadAccessTokenForUserIdResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "GetWorkloadIdentity":{
      "name":"GetWorkloadIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/GetWorkloadIdentity",
        "responseCode":200
      },
      "input":{"shape":"GetWorkloadIdentityRequest"},
      "output":{"shape":"GetWorkloadIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "IntrospectAgentAccessToken":{
      "name":"IntrospectAgentAccessToken",
      "http":{
        "method":"POST",
        "requestUri":"/identities/IntrospectAgentAccessToken",
        "responseCode":200
      },
      "input":{"shape":"IntrospectAgentAccessTokenRequest"},
      "output":{"shape":"IntrospectAgentAccessTokenResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true,
      "internalonly":true
    },
    "IntrospectWorkloadAccessToken":{
      "name":"IntrospectWorkloadAccessToken",
      "http":{
        "method":"POST",
        "requestUri":"/identities/IntrospectWorkloadAccessToken",
        "responseCode":200
      },
      "input":{"shape":"IntrospectWorkloadAccessTokenRequest"},
      "output":{"shape":"IntrospectWorkloadAccessTokenResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true,
      "internalonly":true
    },
    "ListAgentIdentities":{
      "name":"ListAgentIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/identities/ListAgentIdentities",
        "responseCode":200
      },
      "input":{"shape":"ListAgentIdentitiesRequest"},
      "output":{"shape":"ListAgentIdentitiesResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "ListApiKeyCredentialProviders":{
      "name":"ListApiKeyCredentialProviders",
      "http":{
        "method":"POST",
        "requestUri":"/identities/ListApiKeyCredentialProviders",
        "responseCode":200
      },
      "input":{"shape":"ListApiKeyCredentialProvidersRequest"},
      "output":{"shape":"ListApiKeyCredentialProvidersResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "ListOauth2CredentialProviders":{
      "name":"ListOauth2CredentialProviders",
      "http":{
        "method":"POST",
        "requestUri":"/identities/ListOauth2CredentialProviders",
        "responseCode":200
      },
      "input":{"shape":"ListOauth2CredentialProvidersRequest"},
      "output":{"shape":"ListOauth2CredentialProvidersResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "ListWorkloadIdentities":{
      "name":"ListWorkloadIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/identities/ListWorkloadIdentities",
        "responseCode":200
      },
      "input":{"shape":"ListWorkloadIdentitiesRequest"},
      "output":{"shape":"ListWorkloadIdentitiesResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "SetTokenVaultCMK":{
      "name":"SetTokenVaultCMK",
      "http":{
        "method":"POST",
        "requestUri":"/identities/set-token-vault-cmk",
        "responseCode":200
      },
      "input":{"shape":"SetTokenVaultCMKRequest"},
      "output":{"shape":"SetTokenVaultCMKResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ConcurrentModificationException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ]
    },
    "UpdateAgentIdentity":{
      "name":"UpdateAgentIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/UpdateAgentIdentity",
        "responseCode":200
      },
      "input":{"shape":"UpdateAgentIdentityRequest"},
      "output":{"shape":"UpdateAgentIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "deprecated":true
    },
    "UpdateApiKeyCredentialProvider":{
      "name":"UpdateApiKeyCredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/UpdateApiKeyCredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"UpdateApiKeyCredentialProviderRequest"},
      "output":{"shape":"UpdateApiKeyCredentialProviderResponse"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"EncryptionFailure"}
      ],
      "idempotent":true
    },
    "UpdateOauth2Authorizer":{
      "name":"UpdateOauth2Authorizer",
      "http":{
        "method":"POST",
        "requestUri":"/identities/UpdateOauth2Authorizer",
        "responseCode":200
      },
      "input":{"shape":"UpdateOauth2AuthorizerRequest"},
      "output":{"shape":"UpdateOauth2AuthorizerResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true,
      "internalonly":true
    },
    "UpdateOauth2CredentialProvider":{
      "name":"UpdateOauth2CredentialProvider",
      "http":{
        "method":"POST",
        "requestUri":"/identities/UpdateOauth2CredentialProvider",
        "responseCode":200
      },
      "input":{"shape":"UpdateOauth2CredentialProviderRequest"},
      "output":{"shape":"UpdateOauth2CredentialProviderResponse"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"DecryptionFailure"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"EncryptionFailure"}
      ]
    },
    "UpdateWorkloadIdentity":{
      "name":"UpdateWorkloadIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/identities/UpdateWorkloadIdentity",
        "responseCode":200
      },
      "input":{"shape":"UpdateWorkloadIdentityRequest"},
      "output":{"shape":"UpdateWorkloadIdentityResponse"},
      "errors":[
        {"shape":"UnauthorizedException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "idempotent":true
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "AccessTokenType":{
      "type":"string",
      "max":131072,
      "min":1,
      "sensitive":true
    },
    "AgentIdentityArnType":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"arn:(aws|aws-us-gov):agent-credential-provider:[A-Za-z0-9-]{1,64}:[0-9]{12}:agent-id/[a-zA-Z0-9-.]+"
    },
    "AgentIdentityIdType":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"[a-zA-Z0-9-.]+"
    },
    "AgentIdentityList":{
      "type":"list",
      "member":{"shape":"AgentIdentityType"}
    },
    "AgentIdentityNameType":{
      "type":"string",
      "max":240,
      "min":1
    },
    "AgentIdentityType":{
      "type":"structure",
      "required":[
        "name",
        "agentIdentityArn",
        "agentIdentityId"
      ],
      "members":{
        "name":{"shape":"AgentIdentityNameType"},
        "agentIdentityArn":{"shape":"AgentIdentityArnType"},
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "redirectUrl":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "AllowedAudienceListType":{
      "type":"list",
      "member":{"shape":"AllowedAudienceType"},
      "min":1
    },
    "AllowedAudienceMapType":{
      "type":"map",
      "key":{"shape":"AudienceClaimKeyType"},
      "value":{"shape":"AllowedAudienceListType"},
      "min":1
    },
    "AllowedAudienceType":{"type":"string"},
    "ApiKeyCredentialProviderArnType":{
      "type":"string",
      "pattern":"arn:(aws|aws-us-gov):acps:[A-Za-z0-9-]{1,64}:[0-9]{12}:token-vault/[a-zA-Z0-9-.]+/apikeycredentialprovider/[a-zA-Z0-9-.]+"
    },
    "ApiKeyCredentialProviderItem":{
      "type":"structure",
      "required":[
        "name",
        "credentialProviderArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderArn":{"shape":"ApiKeyCredentialProviderArnType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "ApiKeyCredentialProviders":{
      "type":"list",
      "member":{"shape":"ApiKeyCredentialProviderItem"}
    },
    "ApiKeyType":{
      "type":"string",
      "max":65536,
      "min":1,
      "sensitive":true
    },
    "AtlassianOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "AtlassianOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "AudienceClaimKeyType":{
      "type":"string",
      "pattern":"(aud|client_id)"
    },
    "AuthorizationCode":{
      "type":"string",
      "max":2048,
      "min":1,
      "sensitive":true
    },
    "AuthorizationEndpointType":{"type":"string"},
    "AuthorizeRequest":{
      "type":"structure",
      "required":["requestUri"],
      "members":{
        "requestUri":{
          "shape":"RequestUri",
          "location":"querystring",
          "locationName":"request_uri"
        },
        "state":{
          "shape":"State",
          "location":"querystring",
          "locationName":"state"
        }
      }
    },
    "AuthorizeResponse":{
      "type":"structure",
      "required":[
        "statusCode",
        "location",
        "cookies"
      ],
      "members":{
        "statusCode":{
          "shape":"Integer",
          "location":"statusCode"
        },
        "location":{
          "shape":"Location",
          "location":"header",
          "locationName":"Location"
        },
        "cookies":{
          "shape":"Cookies",
          "location":"header",
          "locationName":"Set-Cookie"
        }
      }
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "CallbackRequest":{
      "type":"structure",
      "required":[
        "authorizationCode",
        "state",
        "cookie"
      ],
      "members":{
        "authorizationCode":{
          "shape":"AuthorizationCode",
          "location":"querystring",
          "locationName":"code"
        },
        "state":{
          "shape":"State",
          "location":"querystring",
          "locationName":"state"
        },
        "cookie":{
          "shape":"Cookie",
          "location":"header",
          "locationName":"Cookie"
        }
      }
    },
    "CallbackResponse":{
      "type":"structure",
      "required":[
        "statusCode",
        "location",
        "method"
      ],
      "members":{
        "statusCode":{
          "shape":"Integer",
          "location":"statusCode"
        },
        "location":{
          "shape":"Location",
          "location":"header",
          "locationName":"Location"
        },
        "method":{
          "shape":"RedirectMethod",
          "location":"header",
          "locationName":"Method"
        }
      }
    },
    "ClientIdType":{
      "type":"string",
      "max":256,
      "min":1
    },
    "ClientSecretType":{
      "type":"string",
      "max":2048,
      "min":1,
      "sensitive":true
    },
    "ConcurrentModificationException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "ConflictException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "Cookie":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "Cookies":{
      "type":"list",
      "member":{"shape":"Cookie"},
      "sensitive":true
    },
    "CreateAgentIdentityRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"AgentIdentityNameType"},
        "redirectUrl":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "CreateAgentIdentityResponse":{
      "type":"structure",
      "required":[
        "agentIdentityArn",
        "agentIdentityId",
        "name"
      ],
      "members":{
        "agentIdentityArn":{"shape":"AgentIdentityArnType"},
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "name":{"shape":"AgentIdentityNameType"},
        "redirectUrl":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "CreateApiKeyCredentialProviderRequest":{
      "type":"structure",
      "required":[
        "name",
        "apiKey"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "apiKey":{"shape":"ApiKeyType"}
      }
    },
    "CreateApiKeyCredentialProviderResponse":{
      "type":"structure",
      "required":[
        "apiKeySecretArn",
        "name",
        "credentialProviderArn"
      ],
      "members":{
        "apiKeySecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderArn":{"shape":"ApiKeyCredentialProviderArnType"}
      }
    },
    "CreateOauth2AuthorizerRequest":{
      "type":"structure",
      "required":[
        "resourceId",
        "customJWTAuthorizer"
      ],
      "members":{
        "resourceId":{"shape":"ResourceIdType"},
        "customJWTAuthorizer":{"shape":"CustomJwtAuthorizerType"}
      }
    },
    "CreateOauth2AuthorizerResponse":{
      "type":"structure",
      "required":[
        "resourceId",
        "customJWTAuthorizer"
      ],
      "members":{
        "resourceId":{"shape":"ResourceIdType"},
        "customJWTAuthorizer":{"shape":"CustomJwtAuthorizerType"}
      }
    },
    "CreateOauth2CredentialProviderRequest":{
      "type":"structure",
      "required":[
        "name",
        "credentialProviderVendor",
        "oauth2ProviderConfigInput"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderVendor":{"shape":"CredentialProviderVendorType"},
        "oauth2ProviderConfigInput":{"shape":"Oauth2ProviderConfigInput"}
      }
    },
    "CreateOauth2CredentialProviderResponse":{
      "type":"structure",
      "required":[
        "clientSecretArn",
        "name",
        "credentialProviderArn"
      ],
      "members":{
        "clientSecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderArn":{"shape":"CredentialProviderArnType"}
      }
    },
    "CreateWorkloadIdentityRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "allowedResourceOauth2ReturnUrls":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "CreateWorkloadIdentityResponse":{
      "type":"structure",
      "required":[
        "name",
        "workloadIdentityArn"
      ],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "workloadIdentityArn":{"shape":"WorkloadIdentityArnType"},
        "allowedResourceOauth2ReturnUrls":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "CredentialProviderArnType":{
      "type":"string",
      "pattern":"arn:(aws|aws-us-gov):acps:[A-Za-z0-9-]{1,64}:[0-9]{12}:token-vault/[a-zA-Z0-9-.]+/oauth2credentialprovider/[a-zA-Z0-9-.]+"
    },
    "CredentialProviderName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"[a-zA-Z0-9\\-_]+"
    },
    "CredentialProviderVendorType":{
      "type":"string",
      "enum":[
        "GoogleOauth2",
        "GithubOauth2",
        "SlackOauth2",
        "SalesforceOauth2",
        "MicrosoftOauth2",
        "AtlassianOauth2",
        "LinkedinOauth2",
        "XOauth2",
        "CustomOauth2"
      ]
    },
    "CustomJwtAuthorizerType":{
      "type":"structure",
      "required":["discoveryUrl"],
      "members":{
        "discoveryUrl":{"shape":"DiscoveryUrlType"},
        "allowedAudience":{"shape":"AllowedAudienceMapType"}
      }
    },
    "CustomOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "oauthDiscovery",
        "clientId",
        "clientSecret"
      ],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"},
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "CustomOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "CustomRequestKeyType":{
      "type":"string",
      "max":256,
      "min":1
    },
    "CustomRequestParametersType":{
      "type":"map",
      "key":{"shape":"CustomRequestKeyType"},
      "value":{"shape":"CustomRequestValueType"}
    },
    "CustomRequestValueType":{
      "type":"string",
      "max":2048,
      "min":1,
      "sensitive":true
    },
    "DecryptionFailure":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "DeleteAgentIdentityRequest":{
      "type":"structure",
      "required":["agentIdentityId"],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"}
      }
    },
    "DeleteAgentIdentityResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteApiKeyCredentialProviderRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"CredentialProviderName"}
      }
    },
    "DeleteApiKeyCredentialProviderResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteOauth2AuthorizerRequest":{
      "type":"structure",
      "required":["resourceId"],
      "members":{
        "resourceId":{"shape":"ResourceIdType"}
      }
    },
    "DeleteOauth2AuthorizerResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteOauth2CredentialProviderRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"CredentialProviderName"}
      }
    },
    "DeleteOauth2CredentialProviderResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteWorkloadIdentityRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"}
      }
    },
    "DeleteWorkloadIdentityResponse":{
      "type":"structure",
      "members":{}
    },
    "DiscoveryUrlType":{
      "type":"string",
      "pattern":".+/\\.well-known/openid-configuration"
    },
    "EncryptionFailure":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "GetAgentAccessTokenRequest":{
      "type":"structure",
      "required":["agentIdentityId"],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "userToken":{"shape":"UserTokenType"}
      }
    },
    "GetAgentAccessTokenResponse":{
      "type":"structure",
      "required":["agentAccessToken"],
      "members":{
        "agentAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "GetAgentIdentityRequest":{
      "type":"structure",
      "required":["agentIdentityId"],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"}
      }
    },
    "GetAgentIdentityResponse":{
      "type":"structure",
      "required":[
        "name",
        "agentIdentityArn"
      ],
      "members":{
        "name":{"shape":"AgentIdentityNameType"},
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "agentIdentityArn":{"shape":"AgentIdentityArnType"},
        "redirectUrl":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "GetApiKeyCredentialProviderRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"CredentialProviderName"}
      }
    },
    "GetApiKeyCredentialProviderResponse":{
      "type":"structure",
      "required":[
        "apiKeySecretArn",
        "name",
        "credentialProviderArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "apiKeySecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderArn":{"shape":"ApiKeyCredentialProviderArnType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "GetOauth2AuthorizerRequest":{
      "type":"structure",
      "required":["resourceId"],
      "members":{
        "resourceId":{"shape":"ResourceIdType"}
      }
    },
    "GetOauth2AuthorizerResponse":{
      "type":"structure",
      "required":[
        "resourceId",
        "customJWTAuthorizer",
        "issuerUrl",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "resourceId":{"shape":"ResourceIdType"},
        "customJWTAuthorizer":{"shape":"CustomJwtAuthorizerType"},
        "issuerUrl":{"shape":"IssuerUrlType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "GetOauth2CredentialProviderRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"CredentialProviderName"}
      }
    },
    "GetOauth2CredentialProviderResponse":{
      "type":"structure",
      "required":[
        "clientSecretArn",
        "name",
        "credentialProviderVendor",
        "oauth2ProviderConfigOutput",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "clientSecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderVendor":{"shape":"CredentialProviderVendorType"},
        "oauth2ProviderConfigOutput":{"shape":"Oauth2ProviderConfigOutput"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "GetPublicKeyRequest":{
      "type":"structure",
      "required":[
        "discoveryUrl",
        "keyId"
      ],
      "members":{
        "discoveryUrl":{"shape":"DiscoveryUrlType"},
        "keyId":{"shape":"KeyIdType"}
      }
    },
    "GetPublicKeyResponse":{
      "type":"structure",
      "members":{
        "publicKey":{"shape":"PublicKeyType"}
      }
    },
    "GetResourceApiKeyRequest":{
      "type":"structure",
      "required":[
        "workloadIdentityToken",
        "resourceCredentialProviderName"
      ],
      "members":{
        "workloadIdentityToken":{"shape":"WorkloadIdentityTokenType"},
        "resourceCredentialProviderName":{"shape":"CredentialProviderName"}
      }
    },
    "GetResourceApiKeyResponse":{
      "type":"structure",
      "required":["apiKey"],
      "members":{
        "apiKey":{"shape":"ApiKeyType"}
      }
    },
    "GetResourceOauth2TokenRequest":{
      "type":"structure",
      "required":[
        "workloadIdentityToken",
        "resourceCredentialProviderName",
        "scopes",
        "oauth2Flow"
      ],
      "members":{
        "workloadIdentityToken":{"shape":"WorkloadIdentityTokenType"},
        "userId":{"shape":"UserIdType"},
        "resourceCredentialProviderName":{"shape":"CredentialProviderName"},
        "scopes":{"shape":"ScopesListType"},
        "oauth2Flow":{"shape":"Oauth2FlowType"},
        "resourceOauth2ReturnUrl":{"shape":"ResourceOauth2ReturnUrlType"},
        "forceAuthentication":{"shape":"Boolean"},
        "customParameters":{"shape":"CustomRequestParametersType"}
      }
    },
    "GetResourceOauth2TokenResponse":{
      "type":"structure",
      "members":{
        "authorizationUrl":{"shape":"String"},
        "accessToken":{"shape":"AccessTokenType"}
      }
    },
    "GetResourceOauth2TokenWithUserIdRequest":{
      "type":"structure",
      "required":[
        "awsAgentIdentityToken",
        "userId",
        "resourceCredentialProviderName",
        "scopes",
        "oauth2Flow"
      ],
      "members":{
        "awsAgentIdentityToken":{"shape":"WorkloadIdentityTokenType"},
        "userId":{"shape":"UserIdType"},
        "resourceCredentialProviderName":{"shape":"CredentialProviderName"},
        "scopes":{"shape":"ScopesListType"},
        "oauth2Flow":{"shape":"Oauth2FlowType"},
        "callBackUrl":{"shape":"ResourceOauth2ReturnUrlType"},
        "forceAuthentication":{"shape":"Boolean"}
      }
    },
    "GetResourceOauth2TokenWithUserIdResponse":{
      "type":"structure",
      "members":{
        "authorizationUrl":{"shape":"String"},
        "accessToken":{"shape":"AccessTokenType"}
      }
    },
    "GetTokenVaultRequest":{
      "type":"structure",
      "members":{
        "tokenVaultId":{"shape":"TokenVaultIdType"}
      }
    },
    "GetTokenVaultResponse":{
      "type":"structure",
      "required":[
        "tokenVaultId",
        "kmsConfiguration",
        "lastModifiedDate"
      ],
      "members":{
        "tokenVaultId":{"shape":"TokenVaultIdType"},
        "kmsConfiguration":{"shape":"KmsConfiguration"},
        "lastModifiedDate":{"shape":"Timestamp"}
      }
    },
    "GetWorkloadAccessTokenForJWTRequest":{
      "type":"structure",
      "required":[
        "workloadName",
        "userToken"
      ],
      "members":{
        "workloadName":{"shape":"WorkloadIdentityNameType"},
        "userToken":{"shape":"UserTokenType"}
      }
    },
    "GetWorkloadAccessTokenForJWTResponse":{
      "type":"structure",
      "required":["workloadAccessToken"],
      "members":{
        "workloadAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "GetWorkloadAccessTokenForUserIdRequest":{
      "type":"structure",
      "required":[
        "workloadName",
        "userId"
      ],
      "members":{
        "workloadName":{"shape":"WorkloadIdentityNameType"},
        "userId":{"shape":"UserIdType"}
      }
    },
    "GetWorkloadAccessTokenForUserIdResponse":{
      "type":"structure",
      "required":["workloadAccessToken"],
      "members":{
        "workloadAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "GetWorkloadAccessTokenRequest":{
      "type":"structure",
      "required":["workloadName"],
      "members":{
        "workloadName":{"shape":"WorkloadIdentityNameType"}
      }
    },
    "GetWorkloadAccessTokenResponse":{
      "type":"structure",
      "required":["workloadAccessToken"],
      "members":{
        "workloadAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "GetWorkloadIdentityRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"}
      }
    },
    "GetWorkloadIdentityResponse":{
      "type":"structure",
      "required":[
        "name",
        "workloadIdentityArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "workloadIdentityArn":{"shape":"WorkloadIdentityArnType"},
        "allowedResourceOauth2ReturnUrls":{"shape":"ResourceOauth2ReturnUrlListType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "GithubOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "GithubOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "GoogleOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "GoogleOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "IntrospectAgentAccessTokenRequest":{
      "type":"structure",
      "required":[
        "agentIdentityId",
        "agentAccessToken"
      ],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "agentAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "IntrospectAgentAccessTokenResponse":{
      "type":"structure",
      "required":[
        "agentIdentityId",
        "issuer",
        "audience",
        "expirationTime",
        "issuedTime",
        "jwtId",
        "subject",
        "scopes"
      ],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "issuer":{"shape":"String"},
        "audience":{"shape":"AgentIdentityIdType"},
        "expirationTime":{"shape":"Timestamp"},
        "issuedTime":{"shape":"Timestamp"},
        "jwtId":{"shape":"String"},
        "subject":{"shape":"String"},
        "scopes":{"shape":"ScopesListType"}
      }
    },
    "IntrospectWorkloadAccessTokenRequest":{
      "type":"structure",
      "required":[
        "workloadIdentityName",
        "workloadAccessToken"
      ],
      "members":{
        "workloadIdentityName":{"shape":"WorkloadIdentityNameType"},
        "workloadAccessToken":{"shape":"WorkloadIdentityTokenType"}
      }
    },
    "IntrospectWorkloadAccessTokenResponse":{
      "type":"structure",
      "required":[
        "workloadIdentityName",
        "issuer",
        "audience",
        "expirationTime",
        "issuedTime",
        "jwtId",
        "subject",
        "scopes"
      ],
      "members":{
        "workloadIdentityName":{"shape":"WorkloadIdentityNameType"},
        "issuer":{"shape":"String"},
        "audience":{"shape":"WorkloadIdentityNameType"},
        "expirationTime":{"shape":"Timestamp"},
        "issuedTime":{"shape":"Timestamp"},
        "jwtId":{"shape":"String"},
        "subject":{"shape":"String"},
        "scopes":{"shape":"ScopesListType"}
      }
    },
    "IssuerUrlType":{"type":"string"},
    "KeyIdType":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "KeyType":{
      "type":"string",
      "enum":[
        "CustomerManagedKey",
        "ServiceManagedKey"
      ]
    },
    "KmsConfiguration":{
      "type":"structure",
      "required":["keyType"],
      "members":{
        "keyType":{"shape":"KeyType"},
        "kmsKeyArn":{"shape":"KmsKeyArn"}
      }
    },
    "KmsKeyArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}"
    },
    "LinkedinOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "LinkedinOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "ListAgentIdentitiesRequest":{
      "type":"structure",
      "members":{
        "nextToken":{"shape":"String"},
        "maxResults":{"shape":"ListAgentIdentitiesRequestMaxResultsInteger"}
      }
    },
    "ListAgentIdentitiesRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":20,
      "min":1
    },
    "ListAgentIdentitiesResponse":{
      "type":"structure",
      "required":["agentIdentities"],
      "members":{
        "agentIdentities":{"shape":"AgentIdentityList"},
        "nextToken":{"shape":"String"}
      }
    },
    "ListApiKeyCredentialProvidersRequest":{
      "type":"structure",
      "members":{
        "nextToken":{"shape":"String"},
        "maxResults":{"shape":"MaxResults"}
      }
    },
    "ListApiKeyCredentialProvidersResponse":{
      "type":"structure",
      "required":["credentialProviders"],
      "members":{
        "credentialProviders":{"shape":"ApiKeyCredentialProviders"},
        "nextToken":{"shape":"String"}
      }
    },
    "ListOauth2CredentialProvidersRequest":{
      "type":"structure",
      "members":{
        "nextToken":{"shape":"String"},
        "maxResults":{"shape":"ListOauth2CredentialProvidersRequestMaxResultsInteger"}
      }
    },
    "ListOauth2CredentialProvidersRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":20,
      "min":1
    },
    "ListOauth2CredentialProvidersResponse":{
      "type":"structure",
      "required":["credentialProviders"],
      "members":{
        "credentialProviders":{"shape":"Oauth2CredentialProviders"},
        "nextToken":{"shape":"String"}
      }
    },
    "ListWorkloadIdentitiesRequest":{
      "type":"structure",
      "members":{
        "nextToken":{"shape":"String"},
        "maxResults":{"shape":"ListWorkloadIdentitiesRequestMaxResultsInteger"}
      }
    },
    "ListWorkloadIdentitiesRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":20,
      "min":1
    },
    "ListWorkloadIdentitiesResponse":{
      "type":"structure",
      "required":["workloadIdentities"],
      "members":{
        "workloadIdentities":{"shape":"WorkloadIdentityList"},
        "nextToken":{"shape":"String"}
      }
    },
    "Location":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"\\w+:(\\/?\\/?)[^\\s]+"
    },
    "MaxResults":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "MicrosoftOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "MicrosoftOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "NonBlankString":{
      "type":"string",
      "pattern":"[\\s\\S]+"
    },
    "Oauth2AuthorizationServerMetadata":{
      "type":"structure",
      "required":[
        "issuer",
        "authorizationEndpoint",
        "tokenEndpoint"
      ],
      "members":{
        "issuer":{"shape":"IssuerUrlType"},
        "authorizationEndpoint":{"shape":"AuthorizationEndpointType"},
        "tokenEndpoint":{"shape":"TokenEndpointType"},
        "responseTypes":{"shape":"ResponseListType"}
      }
    },
    "Oauth2CredentialProviderItem":{
      "type":"structure",
      "required":[
        "name",
        "credentialProviderVendor",
        "credentialProviderArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderVendor":{"shape":"CredentialProviderVendorType"},
        "credentialProviderArn":{"shape":"CredentialProviderArnType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "Oauth2CredentialProviders":{
      "type":"list",
      "member":{"shape":"Oauth2CredentialProviderItem"}
    },
    "Oauth2Discovery":{
      "type":"structure",
      "members":{
        "discoveryUrl":{"shape":"DiscoveryUrlType"},
        "authorizationServerMetadata":{"shape":"Oauth2AuthorizationServerMetadata"}
      },
      "union":true
    },
    "Oauth2FlowType":{
      "type":"string",
      "enum":[
        "USER_FEDERATION",
        "M2M"
      ]
    },
    "Oauth2ProviderConfigInput":{
      "type":"structure",
      "members":{
        "customOauth2ProviderConfig":{"shape":"CustomOauth2ProviderConfigInput"},
        "googleOauth2ProviderConfig":{"shape":"GoogleOauth2ProviderConfigInput"},
        "githubOauth2ProviderConfig":{"shape":"GithubOauth2ProviderConfigInput"},
        "slackOauth2ProviderConfig":{"shape":"SlackOauth2ProviderConfigInput"},
        "salesforceOauth2ProviderConfig":{"shape":"SalesforceOauth2ProviderConfigInput"},
        "microsoftOauth2ProviderConfig":{"shape":"MicrosoftOauth2ProviderConfigInput"},
        "atlassianOauth2ProviderConfig":{"shape":"AtlassianOauth2ProviderConfigInput"},
        "linkedinOauth2ProviderConfig":{"shape":"LinkedinOauth2ProviderConfigInput"},
        "xOauth2ProviderConfig":{"shape":"XOauth2ProviderConfigInput"}
      },
      "union":true
    },
    "Oauth2ProviderConfigOutput":{
      "type":"structure",
      "members":{
        "customOauth2ProviderConfig":{"shape":"CustomOauth2ProviderConfigOutput"},
        "googleOauth2ProviderConfig":{"shape":"GoogleOauth2ProviderConfigOutput"},
        "githubOauth2ProviderConfig":{"shape":"GithubOauth2ProviderConfigOutput"},
        "slackOauth2ProviderConfig":{"shape":"SlackOauth2ProviderConfigOutput"},
        "salesforceOauth2ProviderConfig":{"shape":"SalesforceOauth2ProviderConfigOutput"},
        "microsoftOauth2ProviderConfig":{"shape":"MicrosoftOauth2ProviderConfigOutput"},
        "atlassianOauth2ProviderConfig":{"shape":"AtlassianOauth2ProviderConfigOutput"},
        "linkedinOauth2ProviderConfig":{"shape":"LinkedinOauth2ProviderConfigOutput"},
        "xOauth2ProviderConfig":{"shape":"XOauth2ProviderConfigOutput"}
      },
      "union":true
    },
    "PublicKeyType":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "RedirectMethod":{
      "type":"string",
      "enum":[
        "GET",
        "POST"
      ]
    },
    "RequestUri":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"urn:ietf:params:oauth:request_uri:[a-zA-Z0-9-._~]+"
    },
    "ResourceIdType":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "ResourceLimitExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"String"}
      },
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ResourceOauth2ReturnUrlListType":{
      "type":"list",
      "member":{"shape":"ResourceOauth2ReturnUrlType"}
    },
    "ResourceOauth2ReturnUrlType":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"\\w+:(\\/?\\/?)[^\\s]+"
    },
    "ResponseListType":{
      "type":"list",
      "member":{"shape":"ResponseType"}
    },
    "ResponseType":{"type":"string"},
    "SalesforceOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "SalesforceOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "ScopeType":{
      "type":"string",
      "max":128,
      "min":1
    },
    "ScopesListType":{
      "type":"list",
      "member":{"shape":"ScopeType"}
    },
    "Secret":{
      "type":"structure",
      "required":["secretArn"],
      "members":{
        "secretArn":{"shape":"SecretArn"}
      }
    },
    "SecretArn":{
      "type":"string",
      "pattern":"arn:(aws|aws-us-gov):secretsmanager:[A-Za-z0-9-]{1,64}:[0-9]{12}:secret:[a-zA-Z0-9-_/+=.@!]+"
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "SetTokenVaultCMKRequest":{
      "type":"structure",
      "required":["kmsConfiguration"],
      "members":{
        "tokenVaultId":{"shape":"TokenVaultIdType"},
        "kmsConfiguration":{"shape":"KmsConfiguration"}
      }
    },
    "SetTokenVaultCMKResponse":{
      "type":"structure",
      "required":[
        "tokenVaultId",
        "kmsConfiguration",
        "lastModifiedDate"
      ],
      "members":{
        "tokenVaultId":{"shape":"TokenVaultIdType"},
        "kmsConfiguration":{"shape":"KmsConfiguration"},
        "lastModifiedDate":{"shape":"Timestamp"}
      }
    },
    "SlackOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "SlackOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    },
    "State":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "String":{"type":"string"},
    "ThrottlingException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true
    },
    "Timestamp":{"type":"timestamp"},
    "TokenEndpointType":{"type":"string"},
    "TokenVaultIdType":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"[a-zA-Z0-9\\-_]+"
    },
    "UnauthorizedException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "error":{
        "httpStatusCode":401,
        "senderFault":true
      },
      "exception":true
    },
    "UpdateAgentIdentityRequest":{
      "type":"structure",
      "required":["agentIdentityId"],
      "members":{
        "agentIdentityId":{"shape":"AgentIdentityIdType"},
        "redirectUrl":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "UpdateAgentIdentityResponse":{
      "type":"structure",
      "members":{}
    },
    "UpdateApiKeyCredentialProviderRequest":{
      "type":"structure",
      "required":[
        "name",
        "apiKey"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "apiKey":{"shape":"ApiKeyType"}
      }
    },
    "UpdateApiKeyCredentialProviderResponse":{
      "type":"structure",
      "required":[
        "apiKeySecretArn",
        "name",
        "credentialProviderArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "apiKeySecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderArn":{"shape":"ApiKeyCredentialProviderArnType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "UpdateOauth2AuthorizerRequest":{
      "type":"structure",
      "required":[
        "resourceId",
        "customJWTAuthorizer"
      ],
      "members":{
        "resourceId":{"shape":"ResourceIdType"},
        "customJWTAuthorizer":{"shape":"CustomJwtAuthorizerType"}
      }
    },
    "UpdateOauth2AuthorizerResponse":{
      "type":"structure",
      "required":[
        "resourceId",
        "customJWTAuthorizer",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "resourceId":{"shape":"ResourceIdType"},
        "customJWTAuthorizer":{"shape":"CustomJwtAuthorizerType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "UpdateOauth2CredentialProviderRequest":{
      "type":"structure",
      "required":[
        "name",
        "credentialProviderVendor",
        "oauth2ProviderConfigInput"
      ],
      "members":{
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderVendor":{"shape":"CredentialProviderVendorType"},
        "oauth2ProviderConfigInput":{"shape":"Oauth2ProviderConfigInput"}
      }
    },
    "UpdateOauth2CredentialProviderResponse":{
      "type":"structure",
      "required":[
        "clientSecretArn",
        "name",
        "credentialProviderVendor",
        "credentialProviderArn",
        "oauth2ProviderConfigOutput",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "clientSecretArn":{"shape":"Secret"},
        "name":{"shape":"CredentialProviderName"},
        "credentialProviderVendor":{"shape":"CredentialProviderVendorType"},
        "credentialProviderArn":{"shape":"CredentialProviderArnType"},
        "oauth2ProviderConfigOutput":{"shape":"Oauth2ProviderConfigOutput"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "UpdateWorkloadIdentityRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "allowedResourceOauth2ReturnUrls":{"shape":"ResourceOauth2ReturnUrlListType"}
      }
    },
    "UpdateWorkloadIdentityResponse":{
      "type":"structure",
      "required":[
        "name",
        "workloadIdentityArn",
        "createdTime",
        "lastUpdatedTime"
      ],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "workloadIdentityArn":{"shape":"WorkloadIdentityArnType"},
        "allowedResourceOauth2ReturnUrls":{"shape":"ResourceOauth2ReturnUrlListType"},
        "createdTime":{"shape":"Timestamp"},
        "lastUpdatedTime":{"shape":"Timestamp"}
      }
    },
    "UserIdType":{
      "type":"string",
      "max":128,
      "min":1
    },
    "UserTokenType":{
      "type":"string",
      "max":131072,
      "min":1,
      "pattern":"[A-Za-z0-9-_=]+.[A-Za-z0-9-_=]+.[A-Za-z0-9-_=]+",
      "sensitive":true
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{"shape":"ValidationExceptionReason"},
        "fieldList":{"shape":"ValidationExceptionFieldList"}
      },
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "name",
        "message"
      ],
      "members":{
        "name":{"shape":"String"},
        "message":{"shape":"String"}
      }
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"}
    },
    "ValidationExceptionReason":{
      "type":"string",
      "enum":[
        "CannotParse",
        "FieldValidationFailed",
        "IdempotentParameterMismatchException",
        "EventInOtherSession",
        "ResourceConflict"
      ]
    },
    "WorkloadIdentityArnType":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "WorkloadIdentityList":{
      "type":"list",
      "member":{"shape":"WorkloadIdentityType"}
    },
    "WorkloadIdentityNameType":{
      "type":"string",
      "max":255,
      "min":3,
      "pattern":"[A-Za-z0-9_.-]+"
    },
    "WorkloadIdentityTokenType":{
      "type":"string",
      "max":131072,
      "min":1,
      "sensitive":true
    },
    "WorkloadIdentityType":{
      "type":"structure",
      "required":[
        "name",
        "workloadIdentityArn"
      ],
      "members":{
        "name":{"shape":"WorkloadIdentityNameType"},
        "workloadIdentityArn":{"shape":"WorkloadIdentityArnType"}
      }
    },
    "XOauth2ProviderConfigInput":{
      "type":"structure",
      "required":[
        "clientId",
        "clientSecret"
      ],
      "members":{
        "clientId":{"shape":"ClientIdType"},
        "clientSecret":{"shape":"ClientSecretType"}
      }
    },
    "XOauth2ProviderConfigOutput":{
      "type":"structure",
      "required":["oauthDiscovery"],
      "members":{
        "oauthDiscovery":{"shape":"Oauth2Discovery"}
      }
    }
  },
  "clientContextParams":{
    "stage":{
      "documentation":"Stage of Agent Credential Provider",
      "type":"string"
    }
  }
}
